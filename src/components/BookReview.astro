---
interface Props {
  coverImage: ImageMetadata | string;
  title: string;
  author: string;
  rating: number;
  altText?: string;
}

import { Image, type ImageMetadata } from 'astro:assets';

const { coverImage, title, author, rating, altText } = Astro.props;

// Determine if we're using a string path or an ImageMetadata object
const isImagePath = typeof coverImage === 'string';
---

<div class="book-review">
  <div class="book-header">
    <div class="book-cover">
      {isImagePath ? (
        <img 
          src={coverImage} 
          alt={altText || `${title} book cover`} 
          width={300} /* Adjusted later by CSS */
          height={450} /* Adjusted later by CSS */
          class="cover-image"
        />
      ) : (
        <Image 
          src={coverImage} 
          alt={altText || `${title} book cover`} 
          width={300} /* Adjusted later by CSS */
          height={450} /* Adjusted later by CSS */
          class="cover-image"
        />
      )}
    </div>
    <div class="book-info">
      <h3 class="book-title">{title}</h3>
      <p class="book-author">by {author}</p>
      <div class="book-rating">
        {Array(5).fill(0).map((_, i) => (
          <span class={`star ${i < rating ? 'filled' : 'empty'}`}>â˜…</span>
        ))}
      </div>
    </div>
    <div class="book-intro">
      <slot name="intro" />
    </div>
  </div>
  <div class="book-content">
    <slot />
  </div>
</div>

<style>
  .book-review {
    display: flex;
    flex-direction: column;
    gap: 1rem; /* Reduced gap */
    margin: 2rem auto; /* Centering the component */
    padding: 1rem; /* Adjusted padding */
    max-width: 700px; /* Typical content width */
    /* background-color: var(--color-bg-secondary, #FFF1E7); */ /* Keep commented out or remove */
    border-radius: 0; /* Substack often has no border-radius for the main content block */
    box-shadow: none; /* Substack has minimal to no shadow on the main content block */
  }

  .book-header {
    display: flex;
    flex-direction: column;
    align-items: center; /* Center cover image and book info */
    gap: 1rem; /* Reduced gap */
  }

  .book-cover {
    display: flex; /* To center the image if it's smaller than max-width */
    justify-content: center;
    width: 100%;
    max-width: 400px; /* Max width for the cover image */
  }

  .cover-image {
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    max-width: 100%;
    height: auto;
    object-fit: cover;
  }

  .book-info {
    text-align: center;
    width: 100%;
  }

  .book-title {
    margin: 0.5rem 0 0.25rem;
    font-size: 2rem; /* Larger title */
    font-weight: 700;
  }

  .book-author {
    margin: 0 0 0.5rem;
    font-size: 1rem;
    font-style: italic;
    color: var(--color-text-secondary, #555);
  }

  .book-rating {
    display: flex;
    justify-content: center;
    gap: 0.25rem;
    font-size: 1.1rem;
    margin-bottom: 1rem; /* Space before intro */
  }

  .star {
    color: #d1d1d1;
  }

  .star.filled {
    color: #ffc107;
  }

  .book-intro,
  .book-content {
    font-size: 1.1rem;
    line-height: 1.7; /* Increased line height for readability */
    width: 100%;
    text-align: left; /* Ensure text is left-aligned */
  }
  
  .book-intro p:first-child,
  .book-content p:first-child {
      margin-top: 0;
  }

  .book-intro p:last-child,
  .book-content p:last-child {
      margin-bottom: 0;
  }


  /* Responsive layout for larger screens - simplified */
  @media (min-width: 768px) {
    .book-header {
      /* Already column and centered, further specific overrides if needed */
    }
    .book-intro,
    .book-content {
        /* Potentially add more specific typography/spacing for larger screens if desired */
    }
  }
</style> 