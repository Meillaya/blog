---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { processMarkdown, extractFootnotes } from '../../utils/documentProcessor';
import remarkSidenotes from '../../scripts/remark-sidenotes';
import { FootnoteContainer } from '../../components/Footnotes/FootnoteContainer';
import type { CollectionEntry } from 'astro:content';

interface Props {
  entry: CollectionEntry<'musings'>;
}

export async function getStaticPaths() {
    const musingsEntries = await getCollection('musings');
    return musingsEntries.map(entry => ({
        params: { slug: entry.slug },
        props: { entry },
    }));
}

const { entry } = Astro.props as Props;
const processedContent = await processMarkdown(entry.body, remarkSidenotes);

const footnotes = extractFootnotes(entry.body);
---

<Layout
    title={entry.data.title}
    description={entry.data.description}
>
    <article>
        <h1>{entry.data.title}</h1>
        <time datetime={entry.data.publishDate.toISOString()}>
            {entry.data.publishDate.toDateString()}
        </time>
        <div set:html={processedContent} />
    </article>
      <FootnoteContainer client:load footnotes={footnotes} />
</Layout>
