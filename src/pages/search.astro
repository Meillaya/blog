---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { createSearchablePost } from '../utils/search';
import type { SearchablePost } from '../utils/search';
import { SearchComponent } from '../components/SearchComponent';

// Get all posts from all collections
const blogPosts = await getCollection('blog');
const essaysPosts = await getCollection('essays');
const notesPosts = await getCollection('notes');

// Create searchable posts
const allPosts = [...blogPosts, ...essaysPosts, ...notesPosts];
const searchablePosts = allPosts.map(post => createSearchablePost(post));

// Sort by date (newest first)
searchablePosts.sort((a, b) => new globalThis.Date(b.publishDate).getTime() - new globalThis.Date(a.publishDate).getTime());
---

<Layout title="Search - meillaya" description="Search through all blog posts, essays, and notes">
  <div class="search-page">
    <div class="search-header">
      <h1>Search</h1>
      <p>Find articles, essays, and notes across all topics</p>
    </div>

    <div class="search-main">
      <SearchComponent 
        client:load
        posts={searchablePosts}
        placeholder="Search posts, essays, and notes..."
        className="main-search"
      />
    </div>

    <div class="search-stats">
      <div class="stats-container">
        <div class="stat-item">
          <div class="stat-number">{searchablePosts.length}</div>
          <div class="stat-label">Total Posts</div>
        </div>
        <div class="stat-item">
          <div class="stat-number">{blogPosts.length}</div>
          <div class="stat-label">Articles</div>
        </div>
        <div class="stat-item">
          <div class="stat-number">{essaysPosts.length}</div>
          <div class="stat-label">Essays</div>
        </div>
        <div class="stat-item">
          <div class="stat-number">{notesPosts.length}</div>
          <div class="stat-label">Notes</div>
        </div>
      </div>
    </div>

    <div class="search-tips">
      <h3>Search Tips</h3>
      <ul>
        <li>Search across titles, descriptions, and content</li>
        <li>Use keywords from any part of the posts</li>
        <li>Results are ranked by relevance</li>
        <li>All collections are searched simultaneously</li>
      </ul>
    </div>
  </div>
</Layout>

<style>
  .search-page {
    max-width: 900px;
    margin: 0 auto;
    padding: 0 1.5rem;
  }

  .search-header {
    text-align: center;
    margin-bottom: 3rem;
    position: relative;
    padding-bottom: 1.5rem;
  }

  .search-header::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 80px;
    height: 3px;
    background: var(--color-primary, #6a2fb8);
    border-radius: 3px;
  }

  .search-header h1 {
    font-size: 2.5rem;
    color: var(--color-heading, #333);
    margin-bottom: 1rem;
    font-weight: 700;
  }

  .search-header p {
    font-size: 1.2rem;
    color: var(--color-text-light, #666);
    max-width: 600px;
    margin: 0 auto;
  }

  .search-main {
    margin-bottom: 3rem;
  }

  /* Enhanced search component styling for main search */
  :global(.main-search .search-input-wrapper) {
    border: 2px solid #e1e5e9;
    border-radius: 12px;
    background: white;
    box-shadow: 0 2px 12px rgba(0, 0, 0, 0.08);
    transition: all 0.3s ease;
  }

  :global(.main-search .search-input-wrapper:focus-within) {
    border-color: var(--color-primary, #6a2fb8);
    box-shadow: 0 4px 20px rgba(106, 47, 184, 0.15);
    transform: translateY(-2px);
  }

  :global(.main-search .search-input) {
    font-size: 1.1rem;
    padding: 1rem 1.5rem;
  }

  :global(.main-search .search-button) {
    padding: 1rem;
    border-radius: 0 10px 10px 0;
    min-width: 60px;
  }

  :global(.main-search .search-results) {
    border: 1px solid rgba(0, 0, 0, 0.08);
    border-radius: 12px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);
    margin-top: 1rem;
    max-height: 500px;
  }

  .search-stats {
    margin-bottom: 3rem;
  }

  .stats-container {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
    gap: 1.5rem;
    background: var(--color-card-bg, #FFF1E7);
    padding: 2rem;
    border-radius: 16px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
  }

  .stat-item {
    text-align: center;
    padding: 1rem;
    background: white;
    border-radius: 12px;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
    transition: all 0.3s ease;
  }

  .stat-item:hover {
    transform: translateY(-3px);
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);
  }

  .stat-number {
    font-size: 2rem;
    font-weight: 700;
    color: var(--color-primary, #6a2fb8);
    margin-bottom: 0.5rem;
    display: block;
  }

  .stat-label {
    font-size: 0.9rem;
    color: var(--color-text-light, #666);
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-weight: 500;
  }

  .search-tips {
    background: var(--color-card-bg, #FFF1E7);
    padding: 2rem;
    border-radius: 16px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
  }

  .search-tips h3 {
    font-size: 1.5rem;
    color: var(--color-heading, #333);
    margin-bottom: 1.5rem;
    font-weight: 600;
    position: relative;
    display: inline-block;
    padding-bottom: 0.5rem;
  }

  .search-tips h3::after {
    content: "";
    position: absolute;
    bottom: 0;
    left: 0;
    width: 40px;
    height: 3px;
    background: var(--color-primary, #6a2fb8);
    border-radius: 3px;
  }

  .search-tips ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .search-tips li {
    padding: 0.75rem 0;
    border-bottom: 1px solid rgba(0, 0, 0, 0.08);
    color: var(--color-text, #444);
    font-size: 1.05rem;
    position: relative;
    padding-left: 2rem;
  }

  .search-tips li:last-child {
    border-bottom: none;
  }

  .search-tips li::before {
    content: "â†’";
    position: absolute;
    left: 0;
    color: var(--color-primary, #6a2fb8);
    font-weight: 600;
    font-size: 1.1rem;
  }

  @media (max-width: 768px) {
    .search-header h1 {
      font-size: 2rem;
    }

    .search-header p {
      font-size: 1rem;
    }

    .stats-container {
      grid-template-columns: repeat(2, 1fr);
      padding: 1.5rem;
      gap: 1rem;
    }

    .stat-item {
      padding: 0.75rem;
    }

    .stat-number {
      font-size: 1.5rem;
    }

    .search-tips {
      padding: 1.5rem;
    }

    .search-tips li {
      font-size: 1rem;
    }

    :global(.main-search .search-input) {
      font-size: 1rem;
      padding: 0.875rem 1.25rem;
    }

    :global(.main-search .search-button) {
      padding: 0.875rem;
      min-width: 50px;
    }
  }

  @media (max-width: 480px) {
    .stats-container {
      grid-template-columns: 1fr;
    }

    .search-page {
      padding: 0 1rem;
    }
  }
</style> 