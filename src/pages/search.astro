---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import { createSearchablePost, type SearchablePost } from '../utils/search';
import { SearchComponent } from '../components/SearchComponent';

// Get all posts from all collections
const blogPosts = await getCollection('blog');
const essaysPosts = await getCollection('essays');
const notesPosts = await getCollection('notes');

// Create searchable posts
const searchablePosts = [
  ...blogPosts.map(post => createSearchablePost(post)),
  ...essaysPosts.map(post => createSearchablePost(post)),
  ...notesPosts.map(post => createSearchablePost(post))
] as SearchablePost[];

// Sort by date (newest first)
searchablePosts.sort((a, b) => new globalThis.Date(b.publishDate).getTime() - new globalThis.Date(a.publishDate).getTime());
---

<Layout title="Search - meillaya" description="Search through all blog posts, essays, and notes">
  <div class="search-page">
    <div class="search-header">
      <h1>Search</h1>
      <p>Find articles, essays, and notes across all topics</p>
    </div>

    <SearchComponent 
      client:load
      posts={searchablePosts}
      placeholder="Search posts, essays, and notes..."
    />

    <div class="search-stats">
      <p>
        Searching across {searchablePosts.length} posts from {blogPosts.length} articles, 
        {essaysPosts.length} essays, and {notesPosts.length} notes
      </p>
    </div>
  </div>
</Layout>

<style>
  .search-page {
    max-width: 900px;
    margin: 0 auto;
    padding: 0 1.5rem;
  }

  .search-header {
    text-align: center;
    margin-bottom: 3rem;
  }

  .search-header h1 {
    font-size: 2.5rem;
    color: var(--color-heading, #333);
    margin-bottom: 1rem;
    font-weight: 700;
  }

  .search-header p {
    font-size: 1.2rem;
    color: var(--color-text-light, #666);
    max-width: 600px;
    margin: 0 auto;
  }

  .search-stats {
    text-align: center;
    margin-top: 2rem;
    padding: 1rem;
    background: var(--color-card-bg, #FFF1E7);
    border-radius: 8px;
    font-size: 0.9rem;
    color: var(--color-text-light, #666);
  }

  /* Search component styles */
  :global(.search-container) {
    position: relative;
    max-width: 600px;
    margin: 0 auto;
  }

  :global(.search-form) {
    margin-bottom: 1rem;
  }

  :global(.search-input-wrapper) {
    position: relative;
    display: flex;
    align-items: center;
    background: white;
    border: 2px solid #e1e5e9;
    border-radius: 12px;
    padding: 0.5rem;
    transition: all 0.3s ease;
  }

  :global(.search-input-wrapper:focus-within) {
    border-color: var(--color-primary, #6a2fb8);
    box-shadow: 0 0 0 3px rgba(106, 47, 184, 0.1);
  }

  :global(.search-input) {
    flex: 1;
    border: none;
    outline: none;
    font-size: 1.1rem;
    padding: 0.75rem 1rem;
    background: transparent;
    color: var(--color-text, #333);
  }

  :global(.search-input::placeholder) {
    color: #999;
  }

  :global(.search-button) {
    background: var(--color-primary, #6a2fb8);
    border: none;
    border-radius: 8px;
    padding: 0.75rem;
    color: white;
    cursor: pointer;
    transition: all 0.3s ease;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  :global(.search-button:hover) {
    background: var(--color-primary-dark, #5a1fa8);
    transform: translateY(-2px);
  }

  :global(.search-results) {
    position: absolute;
    top: 100%;
    left: 0;
    right: 0;
    background: white;
    border: 1px solid #e1e5e9;
    border-radius: 12px;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
    max-height: 400px;
    overflow-y: auto;
    z-index: 1000;
  }

  :global(.search-loading),
  :global(.search-no-results) {
    padding: 2rem;
    text-align: center;
    color: var(--color-text-light, #666);
  }

  :global(.search-results-list) {
    display: flex;
    flex-direction: column;
  }

  :global(.search-result-item) {
    display: block;
    padding: 1rem 1.5rem;
    border-bottom: 1px solid #f0f0f0;
    text-decoration: none;
    color: inherit;
    transition: all 0.3s ease;
  }

  :global(.search-result-item:hover) {
    background: #f8f9fa;
  }

  :global(.search-result-item:last-child) {
    border-bottom: none;
  }

  :global(.search-result-title) {
    font-size: 1.2rem;
    font-weight: 600;
    margin: 0 0 0.5rem;
    color: var(--color-heading, #333);
  }

  :global(.search-result-description) {
    font-size: 0.95rem;
    color: var(--color-text, #555);
    margin: 0 0 0.75rem;
    line-height: 1.4;
  }

  :global(.search-result-meta) {
    display: flex;
    align-items: center;
    gap: 1rem;
    font-size: 0.85rem;
    color: var(--color-text-light, #666);
  }

  :global(.search-result-collection) {
    background: var(--color-primary, #6a2fb8);
    color: white;
    padding: 0.2rem 0.6rem;
    border-radius: 4px;
    font-size: 0.8rem;
    font-weight: 500;
    text-transform: uppercase;
  }

  :global(.search-result-tags) {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
  }

  :global(.search-result-tag) {
    background: #f0f0f0;
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
    font-size: 0.75rem;
    color: var(--color-text, #555);
  }

  :global(.search-highlight) {
    background: yellow;
    padding: 0.1rem 0.2rem;
    border-radius: 3px;
    font-weight: 600;
  }

  @media (max-width: 768px) {
    .search-header h1 {
      font-size: 2rem;
    }

    :global(.search-result-meta) {
      flex-direction: column;
      align-items: flex-start;
      gap: 0.5rem;
    }
  }
</style> 