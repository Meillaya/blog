---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const progressReports = await getCollection('progress-reports');
  return progressReports.map(entry => ({
    params: { slug: entry.slug }, props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<Layout 
  title={`${entry.data.title} | Meillaya.dev`}
  description={entry.data.description}
  currentPage={entry.data.title}
>
  <article class="progress-report">
    <header class="report-header">
      <h1>{entry.data.title}</h1>
      <div class="report-meta">
        <time datetime={entry.data.publishDate.toISOString()}>
          {entry.data.publishDate.toLocaleDateString('en-US', {
            year: 'numeric',
            month: 'long',
            day: 'numeric'
          })}
        </time>
        <div class="days-list">
          {entry.data.days.map((day: number) => (
            <span class="day-tag">Day {day}</span>
          ))}
        </div>
      </div>
    </header>
    
    <div class="report-content">
      <Content />
    </div>
  </article>
</Layout>

<style>
.progress-report {
  max-width: var(--content-width);
  margin: 0 auto;
  padding: 2rem 0;
}

.report-header {
  margin-bottom: 2rem;
  text-align: center;
}

.report-header h1 {
  margin-bottom: 1rem;
}

.report-meta {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1rem;
  color: var(--text-color-light);
  opacity: 0.8;
}

.bg-dark .report-meta {
  color: var(--text-color-dark);
}

.days-list {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
  justify-content: center;
}

.day-tag {
  background-color: var(--accent-color-light);
  color: white;
  padding: 0.2rem 0.8rem;
  border-radius: 20px;
  font-size: 0.9rem;
}

.bg-dark .day-tag {
  background-color: var(--accent-color-dark);
}

.report-content {
  line-height: 1.8;
}

.report-content :global(h2) {
  margin: 2rem 0 1rem;
}

.report-content :global(p) {
  margin-bottom: 1.5rem;
}

.report-content :global(ul),
.report-content :global(ol) {
  margin: 1rem 0;
  padding-left: 1.5rem;
}

.report-content :global(li) {
  margin-bottom: 0.5rem;
}

.report-content :global(pre) {
  background-color: var(--card-bg-light);
  padding: 1.5rem;
  border-radius: 8px;
  overflow-x: auto;
  margin: 1.5rem 0;
}

.bg-dark .report-content :global(pre) {
  background-color: var(--card-bg-dark);
}

.report-content :global(code) {
  font-family: 'IBM Plex Mono', monospace;
  font-size: 0.9em;
}

.report-content :global(blockquote) {
  border-left: 4px solid var(--accent-color-light);
  margin: 1.5rem 0;
  padding-left: 1rem;
  font-style: italic;
}

.bg-dark .report-content :global(blockquote) {
  border-left-color: var(--accent-color-dark);
}

@media (max-width: 768px) {
  .progress-report {
    padding: 1rem 0;
  }
}
</style>